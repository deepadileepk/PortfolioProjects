

--Analysis
1. Implemented SQL queries for sales analysis, including determining the number of orders and iPhone sales in January, 
identifying the cheapest product, and calculating total revenue per product for January.

2. Utilized SQL JOINs to extract customer account numbers for February orders, determine product sales and revenue at specific locations, 
and analyze customer spending behavior in February.

3. Performed data aggregation to find product sales in Los Angeles and New York, headphone sales in February, 
and average spending per account for February orders.

4. Conducted revenue analysis to identify the highest revenue-generating product in January and
determine the average amount spent per account in February.

--How many orders were placed in January?
SELECT COUNT (orderID)
FROM JanSales
WHERE Length (orderID) = 6
AND OrderID <> ' '
OR OrderID <> 'Order ID'
;

--How many of those orders were for an iPhone?
SELECT COUNT (Product)
FROM JanSales
WHERE orderID = Length (orderID) = 6
AND OrderID <> ' '
OR OrderID <> 'Order ID'
AND Product = 'iPhone'
;

--Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM customers cust
LEFT JOIN FebSales feb
ON cust.order_id = feb.orderID
WHERE orderID = Length (orderID) = 6
AND OrderID <> ' '
OR OrderID <> 'Order ID'
;

--Which product was the cheapest one sold in January, and what was the price?
SELECT Product
, price
FROM JanSales
WHERE price <> 'Price Each'
GROUP BY Product, price
ORDER BY price ASC
LIMIT 1
;

-- What is the total revenue for each product sold in January?
SELECT Product
, price
, ROUND(SUM(Quantity) * Price,2) AS Revenue
FROM JanSales
WHERE Product <> 'Product'
Group BY Product
ORDER BY Revenue DESC
;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, 
--how many of each were sold, and what was the total revenue?
SELECT Product
, Quantity
, Sum(Quantity)* price AS Revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product
;

--How many customers ordered more than 2 products at a time in February, 
-- what was the average amount spent for those customers?
SELECT COUNT (DISTINCT acctnum), AVG(Quantity *price)
FROM customers cust
INNER JOIN FebSales feb
ON cust.order_id = feb.orderID
WHERE Quantity >  2 
AND QUANTITY <> 'Quantity Ordered'
;

--List all the products sold in Los Angeles in February, 
--and include how many of each were sold.
SELECT Product
, SUM(Quantity) as total_quantity_in_units
From FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
Order by total_quantity_in_units DESC
;

--Which locations in New York received at least 3 orders in January, 
--how many orders did they each receive? 
SELECT *, Product
,Quantity
, location
FROM JanSales
WHERE location like '% New York %'
GROUP BY Product, Quantity, orderdate
HAVING Quantity >=3
;

--How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity) as total_quantity
FROM FebSales
WHERE Product like '%Headphone%'
GROUP BY Product
;

--What was the average amount spent per account in February? 
SELECT AVG(Quantity *Price)/ COUNT(cust.acctnum)
AS average_amount_spent
FROM customers cust
LEFT JOIN FebSales feb
ON feb.orderID = cust.order_id 
Where Length(feb.orderID) = 6
AND feb.orderID <> 'Order ID'
;

--Which product brought in the most revenue in January 
--how much revenue did it bring in total?
SELECT Product
, SUM(Quantity) as total_quantity
, Round(SUM(Quantity) * price) as Revenue
FROM JanSales
Where Length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product
Order by Revenue DESC
LIMIT 1
;
